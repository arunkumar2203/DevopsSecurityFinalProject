{"version":3,"sources":["./src/app/loginrespones.ts","./src/app/plasmaDonation.ts","./src/app/registration/registration.component.ts","./src/app/registration/registration.component.html","./src/app/user.ts","./src/app/user-status/user-status.component.ts","./src/app/user-status/user-status.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/jwt-authenticate.service.ts","./src/app/root-nav/root-nav.component.ts","./src/app/root-nav/root-nav.component.html","./src/app/admin-user-status/admin-user-status.component.ts","./src/app/admin-user-status/admin-user-status.component.html","./src/app/app.component.html","./src/app/app.component.ts","./src/app/VaccineUser.ts","./src/app/admin-login/admin-login.component.ts","./src/app/admin-login/admin-login.component.html","./src/app/LoginRequest.ts","./src/app/app.module.ts","./src/app/user-plasma-donation/user-plasma-donation.component.ts","./src/app/user-plasma-donation/user-plasma-donation.component.html","./src/app/admin-user-plasma-donation/admin-user-plasma-donation.component.ts","./src/app/admin-user-plasma-donation/admin-user-plasma-donation.component.html","./src/app/header/header.component.html","./src/app/header/header.component.ts","./src/app/user-registration.service.ts","./src/app/about-covid-vaccine/about-covid-vaccine.component.ts","./src/app/about-covid-vaccine/about-covid-vaccine.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class LoginResponse{\r\n    token!: string;\r\n    userType! :string;\r\n\r\n    constructor(\r\n        token: string,\r\n        userType: string\r\n    ){}\r\n}","export class PlasmaDonationRequest{\r\n    id!:string;\r\n    username!:string;\r\n    bloodGroup!:string;\r\n    units!:number;\r\n    disease!:string;\r\n    age!:string;\r\n    status!:string;\r\n    email!:string;\r\n    constructor(\r\n        id:string,\r\n        username:string,\r\n        bloodGroup:string,\r\n        units:number,\r\n        disease:string,\r\n        age:string,\r\n        status:string,\r\n        email:string\r\n        \r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { User } from '../user';\nimport { UserRegistrationService } from '../user-registration.service';\n\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit {\n\n  user: User=new User(\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"N\",\"N\",\"\",\"\",\"\");\n\n  constructor(private service:UserRegistrationService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public registerNow(){\n    \n    \n    let response=this.service.doRegistration(this.user);\n    response.subscribe((data)=>{\n      if(data){\n        console.log(data);\n        this.router.navigate(['login']);\n        alert(\"You have registered succesfully\");\n        \n\n      }\n    },data=>\n    {\n      alert(data.error.error);\n    }\n    );\n    \n  }\n\n}\n","<div id=\"backGroundImage\">\n<div class=\"wrapper fadeInDown\"  id=\"blockArea\">\n  <div id=\"formContent\">\n    <!-- Tabs Titles -->\n\n    \n\n    <!-- Login Form -->\n    <form>\n      <h1>Register</h1>\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\" [(ngModel)]=\"user.username\">\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\" [(ngModel)]=\"user.password\">\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"user.email\">\n      <select  class=\"fadeIn first\"   name=\"userType\"  [(ngModel)]=\"user.userType\">\n        <option value=\"undefined\" >Type of user</option>\n          <option value=\"Reciver\" >Reciver</option>\n          \n        </select>\n         <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"address\" placeholder=\"Enter the Address\" [(ngModel)]=\"user.address\">\n          <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"age\" placeholder=\"Enter the Age\" [(ngModel)]=\"user.age\">\n          <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"description\" placeholder=\"Enter the description\" [(ngModel)]=\"user.description\">\n         <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"governmentId\" placeholder=\"Enter your government Id\" [(ngModel)]=\"user.governmentId\">\n         <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"phone\" placeholder=\"Enter your phone number\" [(ngModel)]=\"user.phone\">\n         <select  class=\"fadeIn first\"   name=\"state\"  [(ngModel)]=\"user.state\">\n        <option value=\"undefined\" >Select the state </option>\n          <option value=\"Dublin\" >Dublin</option>\n           <option value=\"Galway\" >Galway</option>\n            <option value=\"Cork\" >Cork</option>\n          \n        </select>\n      \n     \n      <input type=\"submit\" class=\"fadeIn fourth\" id =\"submit\" value=\"Register\" (click)=\"registerNow()\">\n    </form>\n\n    \n\n  </div>\n</div>\n</div>\n","export class User{\r\n    username!: string;\r\n    password!:string;\r\n    email!:string;\r\n    userType!:string;\r\n    address!:string;\r\n    age!:string;\r\n    description!:string;\r\n    firstDose!:string;\r\n    secondDose!:string;\r\n    governmentId!:string;\r\n    phone!:string;\r\n    state!:string;\r\n  \r\nconstructor(\r\n    username:string,\r\n    password:string,\r\n    email:string,\r\n    userType:string,\r\n    address:string,\r\n    age:string,\r\n    description:string,\r\n    firstDose:string,\r\n    secondDose:string,\r\n    governmentId:string,\r\n    phone:string,\r\n    state:string\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { JwtAuthenticateService } from '../jwt-authenticate.service';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-status',\n  templateUrl: './user-status.component.html',\n  styleUrls: ['./user-status.component.css']\n})\nexport class UserStatusComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n  name!:any;\n  requests!:any;\n\n\n  constructor(private jwt:JwtAuthenticateService,private userservice:UserService,private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n    this.name=this.jwt.getUserName()\n    alert(this.name)\n    let resp=this.userservice.getUsersByUsername(this.name)\n     resp.subscribe((data)=>this.requests=data);\n  }\n\n}\n","<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<mat-sidenav-container class=\"sidenav-container\"  >\n<mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n  <mat-toolbar id=\"toolId\">Ireland Vaccination</mat-toolbar>\n   <mat-nav-list >\n  <a mat-list-item routerLink=\"/userStatus\">View Status</a>\n      <a mat-list-item routerLink=\"/plasmaRegistraion\">Donation Plasma</a>\n      <a mat-list-item  routerLink=\"/aboutCovid19\">About Covid19 Vaccine</a> \n      \n    </mat-nav-list>\n  </mat-sidenav>\n  </mat-sidenav-container>\n\n<div id=\"donor\">\n\n<div class=\"container\">\n<div class=\"container\">\n    <div class=\"row col-md-6 col-md-offset-2 custyle\">\n    <table class=\"table table-striped custab\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>FIRST DOSE</th>\n            <th>SECOND DOSE</th>\n        \n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let request of requests\">\n            <td>{{request.id}}</td>\n            <td>{{request.name}}</td>\n           \n           <td> \n          \n           <div style=\"border-radius: 10px;margin-top: 0px;\">\n    <span *ngIf=\"request.firstDose==0\" class=\"btn btn-danger\">REJECTED</span>\n    <span *ngIf=\"request.firstDose==1\" class=\"btn btn-success\">APPROVED</span>\n    <span *ngIf=\"request.firstDose==2\" class=\"btn btn-warning\">PENDING</span> \n</div>\n</td>\n  <td> \n          \n           <div style=\"border-radius: 10px;margin-top: 0px;\">\n    <span *ngIf=\"request.secondDose==0\" class=\"btn btn-danger\">REJECTED</span>\n    <span *ngIf=\"request.secondDose==1\" class=\"btn btn-success\">APPROVED</span>\n    <span *ngIf=\"request.secondDose==2\" class=\"btn btn-warning\">PENDING</span> \n</div>\n</td>\n  \n            \n          </tr>\n    </tbody>\n    </table>\n    </div>\n</div>\n\n</div>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { LoginResponse } from './loginrespones';\nimport { Observable } from 'rxjs';\nconst TOKEN = 'TOKEN';\nconst NAME='NAME';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtAuthenticateService {\n\n  url:string=\"http://localhost:5000/\";\n\n  constructor(private httpClient:HttpClient) { }\n  public generateToken(request: any){\n    localStorage.setItem(NAME,request.username)\n    return this.httpClient.post<string>(this.url+\"authenticate\", request, {  responseType: 'text' as 'json' });\n    \n  }\n  public admingenerateToken(request: any):Observable<LoginResponse>{\n    localStorage.setItem(NAME,request.username)\n    return this.httpClient.post<LoginResponse>(this.url+\"authenticate\", request);\n    \n  }\n  setToken(token: string): void {\n    localStorage.setItem(TOKEN, token);\n  }\n  removeToken(): void{\n    \n    localStorage.removeItem(TOKEN);\n  }\n  getToken(): any{\n    return localStorage.getItem(TOKEN);\n  }\n\n  isLogged() {\n    return localStorage.getItem(TOKEN) != null;\n  }\n  getUserName(){\n    return localStorage.getItem(NAME)\n  }\n}\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { JwtAuthenticateService } from '../jwt-authenticate.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root-nav',\n  templateUrl: './root-nav.component.html',\n  styleUrls: ['./root-nav.component.css']\n})\nexport class RootNavComponent  {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n    isUserLog!: boolean;\n\n   \n\n  constructor(private breakpointObserver: BreakpointObserver,private jwtAuthenticate: JwtAuthenticateService,private router:Router) {}\n\n  public isUserLoggedIn():boolean{\n    if (this.jwtAuthenticate.getToken()!=null){\n      this.isUserLog!=true;\n      console.log(this.jwtAuthenticate.getToken());\n        return true;\n\n    }\n    else{\n      this.isUserLog!=false;\n      console.log(this.jwtAuthenticate.getToken());\n      return false;\n\n    }\n      \n    \n  }\n  public logoutUser(){\n    this.jwtAuthenticate.removeToken();\n    this.router.navigate(['adminLogin']);\n  }\n\n  public redirectToLogin(){\n    this.router.navigate(['registration']);\n  }\n}\n","<mat-sidenav-container class=\"sidenav-container\" *ngIf=\"isUserLoggedIn(); \">\n<mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n  <mat-toolbar id=\"toolId\" ></mat-toolbar>\n  </mat-sidenav>\n \n\n  <mat-sidenav-content  >\n    <mat-toolbar color=\"black\" id=\"toolId\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span></span>\n      <div class=\"loginbtn\" *ngIf=\"isUserLoggedIn(); else otherblock\">\n    \n      <a  id =\"right-panel-link\" (click)='logoutUser()'>Logout</a>\n  \n    </div>\n    \n     <ng-template #otherblock>  <button class=\"btn btn-success pull-right\"  id =\"right-panel-link\" (click)=\"redirectToLogin()\" >SignUp</button></ng-template>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n \n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { VaccineUser } from '../VaccineUser';\n\n@Component({\n  selector: 'app-admin-user-status',\n  templateUrl: './admin-user-status.component.html',\n  styleUrls: ['./admin-user-status.component.css']\n})\nexport class AdminUserStatusComponent implements OnInit {\n  requests:any;\n  bloodGroup!:string;\n  message!:any;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n  vaccineUser!:VaccineUser;\n\n  constructor(private services:UserService,private router:Router,private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n    let resp=this.services.getAllUserRequest()\n     resp.subscribe((data)=>this.requests=data);\n  }\n  public onDeleteUser(user:any){\n    \n    let resp=this.services.onDeleteUser(user.id);\n    resp.subscribe((data)=>this.requests=data);\n\n  }\n\n  public onAcceptFirstDose(request:any){\n    request.firstDose=1\n    this.vaccineUser=new VaccineUser(request.id,request.email,request.address,request.age,request.description\n      ,request.firstDose,request.secondDose,request.governmentId,request.phoneNumber,request.state);\n    let resp=this.services.onAcceptOrRejectOfUserRequests(request)\n    resp.subscribe((data)=>this.message=data);\n    \n  }\n  public onRejectFirstDose(request:any){\n    request.firstDose=2\n    this.vaccineUser=new VaccineUser(request.id,request.email,request.address,request.age,request.description\n      ,request.firstDose,request.secondDose,request.governmentId,request.phoneNumber,request.state);\n    let resp=this.services.onAcceptOrRejectOfUserRequests(request)\n    resp.subscribe((data)=>this.message=data);\n    \n  }\n  public onAcceptSecondDose(request:any){\n    request.secondDose=1\n    this.vaccineUser=new VaccineUser(request.id,request.email,request.address,request.age,request.description\n      ,request.firstDose,request.secondDose,request.governmentId,request.phoneNumber,request.state);\n    let resp=this.services.onAcceptOrRejectOfUserRequests(request)\n    resp.subscribe((data)=>this.message=data);\n    \n  }\n  public onRejectSecondDose(request:any){\n    request.secondDose=2\n    this.vaccineUser=new VaccineUser(request.id,request.email,request.address,request.age,request.description\n      ,request.firstDose,request.secondDose,request.governmentId,request.phoneNumber,request.state);\n    let resp=this.services.onAcceptOrRejectOfUserRequests(request)\n    resp.subscribe((data)=>this.message=data);\n    \n  }\n\n\n\n\n}\n","<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<mat-sidenav-container class=\"sidenav-container\"  >\n<mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n  <mat-toolbar id=\"toolId\">DasariBloodBank</mat-toolbar>\n    <mat-nav-list >\n       <a mat-list-item routerLink=\"/adminUserStatus\">Vaccine Requests</a>\n      <a mat-list-item routerLink=\"/adminPlasma\">Plasama Donations</a>\n      <a mat-list-item  routerLink=\"/adminDonationsView\">Donation Requests</a>\n      <a mat-list-item  routerLink=\"/acceptor\">View Acceptors</a>\n      <a mat-list-item  routerLink=\"/adminAcceptorRequest\">Acceptors Requests</a>\n      \n      <a mat-list-item  routerLink=\"/sendNotification\">Send Notifcations</a>\n     \n    </mat-nav-list>\n  </mat-sidenav>\n  </mat-sidenav-container>\n\n<div id=\"donor\">\n<div class=\"container\">\n    <div class=\"row\">\n               <div id=\"custom-search-input\">\n                                <div class=\"input-group col-md-12\" style=\"text-align: center\">\n                                    <input type=\"text\" class=\"search-query form-control\" placeholder=\"Search by Blood Group\"  name=\"name\" />\n                                    <span class=\"input-group-btn\">\n                                        <button class=\"btn btn-danger\" type=\"button\" >\n                                            <span class=\" glyphicon glyphicon-search\"></span>\n                                        </button>\n                                    </span>\n                                </div>\n                            </div>\n    </div>\n    </div>\n<div class=\"container\">\n<div class=\"container\">\n    <div class=\"row col-md-6 col-md-offset-2 custyle\">\n    <table class=\"table table-striped custab\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Age</th>\n            <th>Description</th>\n            <th>FirstDose</th>\n            <th>Second Dose</th>\n            <th>Phone Number</th>\n            <th>Government ID</th>\n            <th>Address</th>\n            <th>State</th>\n            <th>Action</th>\n           \n           \n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let request of requests\">\n            <td>{{request.id}}</td>\n            <td>{{request.name}}</td>\n            <td>{{request.email}}</td>\n            <td>{{request.age}}</td>\n            <td>{{request.description}}</td>\n            <td>  \n           <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-success\" (click)=\"onAcceptFirstDose(request)\"  mdbWavesEffect>ACCEPT</button>\n           <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-danger\" (click)=\"onRejectFirstDose(request)\"  mdbWavesEffect>REJECT</button>\n           </td>\n            <td>  \n           <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-success\" (click)=\"onAcceptSecondDose(request)\"  mdbWavesEffect>ACCEPT</button>\n           <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-danger\" (click)=\"onRejectSecondDose(request)\"  mdbWavesEffect>REJECT</button>\n            </td>\n\n           <td>{{request.phoneNumber}}</td>\n           <td>{{request.governmentId}}</td>\n            <td>{{request.address}}</td>\n             <td>{{request.state}}</td>\n              <td>\n                <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-danger\" (click)=\"onDeleteUser(request)\"  mdbWavesEffect>DELETE</button>\n\n            </td>\n\n            \n\n            \n          </tr>\n    </tbody>\n    </table>\n    </div>\n</div>\n\n</div>\n\n\n\n\n\n","<app-header *ngIf=\"!isUserLoggedIn()\"></app-header>\n<app-root-nav *ngIf=\"isUserLoggedIn()\"> </app-root-nav>  \n<router-outlet></router-outlet>","import { Component } from '@angular/core';\nimport { JwtAuthenticateService } from './jwt-authenticate.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Covid vaccineRegistration';\n\n  isUserLog!: boolean;\n  constructor(private jwtAuthenticate:JwtAuthenticateService) { }\n\n  public isUserLoggedIn():boolean{\n    if (this.jwtAuthenticate.getToken()!=null){\n      this.isUserLog!=true;\n      console.log(this.jwtAuthenticate.getToken());\n        return true;\n\n    }\n        \n    else{\n      this.isUserLog!=false;\n      console.log(this.jwtAuthenticate.getToken());\n      return false;\n\n    }\n  }\n}\n","export class VaccineUser{\r\n    name!: string;\r\n    email!:string;\r\n    address!:string;\r\n    age!:string;\r\n    description!:string;\r\n    firstDose!:string;\r\n    secondDose!:string;\r\n    governmentId!:string;\r\n    phoneNumber!:string;\r\n    state!:string;\r\n  \r\nconstructor(\r\n    name:string,\r\n    email:string,\r\n    address:string,\r\n    age:string,\r\n    description:string,\r\n    firstDose:string,\r\n    secondDose:string,\r\n    governmentId:string,\r\n    phoneNumber:string,\r\n    state:string\r\n    ){}\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtAuthenticateService } from '../jwt-authenticate.service';\nimport { LoginRequest } from '../LoginRequest';\nimport { LoginResponse } from '../loginrespones';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html',\n  styleUrls: ['./admin-login.component.css']\n})\nexport class AdminLoginComponent implements OnInit {\n\n  request:LoginRequest=new LoginRequest(\"\",\"\");\n  token: any;\n  name!: string;\n  loginResp:LoginResponse=new LoginResponse(\"\",\"\");\n\n  \n  constructor(private jwtAuthenticate:JwtAuthenticateService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  public getAccessToken(){\n    let resp =this.jwtAuthenticate.admingenerateToken(this.request);\n    \n    resp.subscribe((data)=> {\n      this.loginResp=data\n   \n      if(this.loginResp.userType== \"A\"){\n      this.name=this.request.username\n         this.jwtAuthenticate.setToken(this.loginResp.token);\n        this.router.navigate(['adminUserStatus']);\n     }\n     else if(this.loginResp.userType== \"R\"){\n      this.name=this.request.username\n         this.jwtAuthenticate.setToken(this.loginResp.token);\n        this.router.navigate(['userStatus']);\n     }\n    else{\n      alert(\"Please Enter valid username and password\")\n    }\n    \n    },data=>\n    {\n      alert(\"Please Enter valid username and password\")\n    }\n    );\n\n}\n}\n","\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n\n\n<div id=\"backGroundImage\">\n<div class=\"wrapper fadeInDown\" >\n  <div id=\"formContent\">\n    <!-- Tabs Titles -->\n\n    \n\n    <!-- Login Form -->\n    <form>\n    <h1>Admin</h1>\n      <input type=\"text\" [(ngModel)]=\"request.username\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\">\n      <input type=\"text\" [(ngModel)]=\"request.password\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\">\n      <input type=\"submit\" class=\"fadeIn fourth\" id =\"submit\" value=\"Log In\" (click)=\"getAccessToken()\">\n    </form>\n\n    \n\n  </div>\n</div>\n</div>","export class LoginRequest{\r\n    username!: string;\r\n    password! :string;\r\n\r\n    constructor(\r\n        username: string,\r\n        password: string\r\n    ){}\r\n}","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { RootNavComponent } from './root-nav/root-nav.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { JwtAuthenticateService } from './jwt-authenticate.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeComponent } from './home/home.component';\n\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\n\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatListModule } from '@angular/material/list';\nimport { UserStatusComponent } from './user-status/user-status.component';\nimport { UserPlasmaDonationComponent } from './user-plasma-donation/user-plasma-donation.component';\nimport { AdminUserStatusComponent } from './admin-user-status/admin-user-status.component';\nimport { AdminUserPlasmaDonationComponent } from './admin-user-plasma-donation/admin-user-plasma-donation.component';\nimport { AboutCovidVaccineComponent } from './about-covid-vaccine/about-covid-vaccine.component';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    RootNavComponent,\n    RegistrationComponent,\n    AdminLoginComponent,\n    LoginComponent,\n    HomeComponent,\n    UserStatusComponent,\n    UserPlasmaDonationComponent,\n    AdminUserStatusComponent,\n    AdminUserPlasmaDonationComponent,\n    AboutCovidVaccineComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n  \n  \n    ReactiveFormsModule,\n    MDBBootstrapModule.forRoot(),\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n   \n  ],\n  providers: [JwtAuthenticateService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { PlasmaDonationRequest } from '../plasmaDonation';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-user-plasma-donation',\n  templateUrl: './user-plasma-donation.component.html',\n  styleUrls: ['./user-plasma-donation.component.css']\n})\nexport class UserPlasmaDonationComponent implements OnInit {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n\n  donationRequest: PlasmaDonationRequest=new PlasmaDonationRequest(\"\",\"\",\"\",0.0,\"\",\"\",\"0\",\"\")\n\n  constructor(private service:UserService,private router:Router,private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n  }\n\n  public registerNow(){\n    this.donationRequest.status=\"0\"\n    let response=this.service.doPlasmaRegistration(this.donationRequest)\n    response.subscribe((data)=>{\n      if(data){\n        console.log(data);\n        \n        this.router.navigate(['userStatus']);\n        alert(\"Donation request has done succeesfully \");\n        \n\n      }\n    },data=>\n    {\n      alert(data.error.error);\n    }\n    );\n    \n  }\n}\n","\n<mat-sidenav-container class=\"sidenav-container\"  >\n<mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n  <mat-toolbar id=\"toolId\">Ireland Vaccination</mat-toolbar>\n   <mat-nav-list >\n      <a mat-list-item routerLink=\"/userStatus\">View Status</a>\n      <a mat-list-item routerLink=\"/plasmaRegistraion\">Donation Plasma</a>\n     <a mat-list-item  routerLink=\"/aboutCovid19\">About Covid19 Vaccine</a> \n      \n      \n\n     \n    </mat-nav-list>\n  </mat-sidenav>\n  </mat-sidenav-container>\n <div id=\"backGroundImage\">\n<div class=\"wrapper fadeInDown\"  id=\"blockArea\">\n  <div id=\"formContent\">\n    <!-- Tabs Titles -->\n\n    \n\n    \n    <form>\n      <h1>Plasma Donation Request</h1>\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"username\" placeholder=\"username\" [(ngModel)]=\"donationRequest.username\">\n      <select  class=\"fadeIn first\" name=\"bloodgroup\"  [(ngModel)]=\"donationRequest.bloodGroup\">\n        <option value=\"undefined\" >Select Your blood group</option>\n          <option value=\"A+\">A+</option>\n          <option value=\"A-\">A-</option>\n          <option value=\"B+\">B+</option>\n          <option value=\"B-\">B-</option>\n          <option value=\"AB+\">AB+</option>\n          <option value=\"AB-\">AB-</option>\n          <option value=\"O+\">O+</option>\n          <option value=\"O-\">O-</option>\n      </select>\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn third\" name=\"units\" placeholder=\"units\" [(ngModel)]=\"donationRequest.units\">\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"disease\" placeholder=\"disease\" [(ngModel)]=\"donationRequest.disease\">\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"age\" placeholder=\"age\" [(ngModel)]=\"donationRequest.age\">\n      <input type=\"text\"  id=\"inputForm\" class=\"fadeIn second\" name=\"email\" placeholder=\"email\" [(ngModel)]=\"donationRequest.email\">\n         \n      <input type=\"submit\" class=\"fadeIn fourth\" id =\"submit\" value=\"Register\" (click)=\"registerNow()\">\n    </form>\n\n    \n\n  </div>\n</div>\n</div>\n\n","\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { PlasmaDonationRequest } from '../plasmaDonation';\n\n@Component({\n  selector: 'app-admin-user-plasma-donation',\n  templateUrl: './admin-user-plasma-donation.component.html',\n  styleUrls: ['./admin-user-plasma-donation.component.css']\n})\nexport class AdminUserPlasmaDonationComponent implements OnInit {\n\n  \n  requests:any;\n  bloodGroup!:string;\n  message!:any;\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n  plasmaUser!:PlasmaDonationRequest;\n\n  constructor(private services:UserService,private router:Router,private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n    let resp=this.services.getAllVaccineRegistered()\n     resp.subscribe((data)=>this.requests=data);\n  }\n\n  public onAcceptPlasma(request:any){\n    request.status=1\n    this.plasmaUser=new PlasmaDonationRequest(request.id,request.username,request.age,request.bloodGroup,request.disease,request.units,request.status,request.email);\n    let resp=this.services.onAcceptDonorPlasma(request)\n    resp.subscribe((data)=>this.message=data);\n    \n  }\n  public onRejectPlasma(request:any){\n    request.status=2\n    this.plasmaUser=new PlasmaDonationRequest(request.id,request.username,request.age,request.bloodGroup,request.disease,request.units,request.status,request.email);\n    let resp=this.services.onAcceptDonorPlasma(request)\n    resp.subscribe((data)=>this.message=data);\n    \n  }\n  \n\n}\n","<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<mat-sidenav-container class=\"sidenav-container\"  >\n<mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n  <mat-toolbar id=\"toolId\">DasariBloodBank</mat-toolbar>\n    <mat-nav-list >\n     <a mat-list-item routerLink=\"/adminUserStatus\">Vaccine Requests</a>\n      <a mat-list-item routerLink=\"/adminPlasma\">Plasama Donations</a>\n      <a mat-list-item  routerLink=\"/adminDonationsView\">Donation Requests</a>\n      <a mat-list-item  routerLink=\"/acceptor\">View Acceptors</a>\n      <a mat-list-item  routerLink=\"/adminAcceptorRequest\">Acceptors Requests</a>\n      \n      <a mat-list-item  routerLink=\"/sendNotification\">Send Notifcations</a>\n     \n    </mat-nav-list>\n  </mat-sidenav>\n  </mat-sidenav-container>\n\n<div id=\"donor\">\n<div class=\"container\">\n    <div class=\"row\">\n               <div id=\"custom-search-input\">\n                                <div class=\"input-group col-md-12\" style=\"text-align: center\">\n                                    <input type=\"text\" class=\"search-query form-control\" placeholder=\"Search by Blood Group\"  name=\"name\" />\n                                    <span class=\"input-group-btn\">\n                                        <button class=\"btn btn-danger\" type=\"button\" >\n                                            <span class=\" glyphicon glyphicon-search\"></span>\n                                        </button>\n                                    </span>\n                                </div>\n                            </div>\n    </div>\n    </div>\n<div class=\"container\">\n<div class=\"container\">\n    <div class=\"row col-md-6 col-md-offset-2 custyle\">\n    <table class=\"table table-striped custab\">\n    <thead>\n        <tr>\n            <th>Id</th>\n            <th>Name</th>\n            <th>Age</th>\n            <th>BloodType</th>\n            <th>disease</th>\n            <th>Email</th>\n           \n            <th>Units</th>\n             <th>Action</th>\n             &nbsp;&nbsp;&nbsp;\n             <th>Status</th>\n            \n           \n           \n            <th></th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let request of requests\">\n            <td>{{request.id}}</td>\n            <td>{{request.username}}</td>\n            <td>{{request.age}}</td>\n            <td>{{request.bloodGroup}}</td>\n            <td>{{request.disease}}</td>\n            <td>{{request.email}}\n            <td>{{request.units}}</td>\n\n            <td>  \n           <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-success\" (click)=\"onAcceptPlasma(request)\"  mdbWavesEffect>ACCEPT</button>\n           <button type=\"button\" mdbBtn color=\"primary\" class=\"btn btn-danger\"  (click)=\"onRejectPlasma(request)\"  mdbWavesEffect>REJECT</button>\n           </td>\n           <td>\n            <td> \n          \n           <div style=\"border-radius: 10px;margin-top: 0px;\">\n    <span *ngIf=\"request.status==2\" class=\"btn btn-danger\">REJECTED</span>\n    <span *ngIf=\"request.status==1\" class=\"btn btn-success\">APPROVED</span>\n    <span *ngIf=\"request.status==0\" class=\"btn btn-warning\">PENDING</span> \n</div>\n           </td>\n\n           \n\n          \n              \n\n            \n\n            \n          </tr>\n    </tbody>\n    </table>\n    </div>\n</div>\n\n</div>\n\n\n\n\n\n","\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <title>Bootstrap Example</title>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\">\n  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\n  <script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js\"></script>\n</head>\n<body>\n<nav class=\"navbar navbar-expand-sm bg-dark navbar-dark\" id=\"navId\">\n    <div id=\"font\" style=\"text-align: left;\"> <p style=\"text-align: left;\"> Covid Vaccine Registration</p> </div>\n    \n    <!-- Links -->&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n    <ul class=\"navbar-nav\">\n     \n      <!--<li class=\"nav-item\" *ngIf=\"isUserLoggedIn()\">\n        <a class=\"nav-link\" routerLink=\"/donor\">Donors</a>\n      </li>\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <li class=\"nav-item\" *ngIf=\"isUserLoggedIn()\">\n        <a class=\"nav-link\" routerLink=\"/acceptor\">Acceptors</a>\n      </li>-->\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n     \n      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <li class=\"nav-item\" *ngIf=\"!isUserLoggedIn()\">\n        <a class=\"nav-link\" routerLink=\"/login\">Login</a>\n      </li>\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <li class=\"nav-item\" *ngIf=\"!isUserLoggedIn()\">\n        <a class=\"nav-link\" routerLink=\"/adminLogin\">Admin</a>\n      </li>\n       &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <li class=\"nav-item\" *ngIf=\"!isUserLoggedIn()\">\n        <a class=\"nav-link\" routerLink=\"/registration\">SignUp</a>\n      </li>\n\n      \n     \n    </ul>\n   <!-- <div class=\"loginbtn\" *ngIf=\"isUserLoggedIn(); else otherblock\">\n    \n      <button class=\"btn btn-success pull-right\"  id =\"right-panel-link\" (click)='logoutUser()'>Logout</button>\n  \n    </div>\n  \n    <ng-template #otherblock>  <button class=\"btn btn-success pull-right\"  id =\"right-panel-link\" (click)=\"redirectToLogin()\" >SignUp</button></ng-template>\n   -->    </nav>\n</body>\n</html>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtAuthenticateService } from '../jwt-authenticate.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  isUserLog!: boolean;\n\n  constructor(private jwtAuthenticate:JwtAuthenticateService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  public logoutUser(){\n    this.jwtAuthenticate.removeToken();\n    this.router.navigate(['adminLogin']);\n  }\n  public redirectToLogin(){\n    this.router.navigate(['registration']);\n  }\n  public isUserLoggedIn():boolean{\n    if (this.jwtAuthenticate.getToken()!=null){\n      this.isUserLog!=true;\n      console.log(this.jwtAuthenticate.getToken());\n        return true;\n\n    }\n        \n    else{\n      this.isUserLog!=false;\n      console.log(this.jwtAuthenticate.getToken());\n      return false;\n\n    }\n      \n    \n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtAuthenticateService } from './jwt-authenticate.service';\nimport { UserService } from './user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserRegistrationService {\n\n // url:string=\"http://localhost:5000/\";\n url:string=\"http://localhost:5000/\";\n  \n  constructor(private http:HttpClient,private jwtService:JwtAuthenticateService) { }\n\n  public doRegistration(user:any){\n          return this.http.post(this.url+\"register\",user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { JwtAuthenticateService } from '../jwt-authenticate.service';\nimport { UserService } from '../user.service';\n\n\n@Component({\n  selector: 'app-about-covid-vaccine',\n  templateUrl: './about-covid-vaccine.component.html',\n  styleUrls: ['./about-covid-vaccine.component.css']\n})\nexport class AboutCovidVaccineComponent implements OnInit {\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n  .pipe(\n    map(result => result.matches),\n    shareReplay()\n  );\n  name!:any;\n  requests!:any;\n\n\n  constructor(private jwt:JwtAuthenticateService,private userservice:UserService,private breakpointObserver: BreakpointObserver) { }\n\n\n\n  ngOnInit(): void {\n  }\n\n}\n","<link href=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//code.jquery.com/jquery-1.11.1.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n<mat-sidenav-container class=\"sidenav-container\"  >\n<mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n  <mat-toolbar id=\"toolId\">Ireland Vaccination</mat-toolbar>\n   <mat-nav-list >\n  <a mat-list-item routerLink=\"/userStatus\">View Status</a>\n      <a mat-list-item routerLink=\"/plasmaRegistraion\">Donation Plasma</a>\n      <a mat-list-item  routerLink=\"/aboutCovid19\">About Covid19 Vaccine</a> \n      \n      \n    </mat-nav-list>\n  </mat-sidenav>\n  </mat-sidenav-container>\n\n<div class=\"about-section\">\n  <h1>Covid-19 Vaccines</h1>\n  <p>Your COVID-19 vaccine will offer you protection from COVID-19 (coronavirus)</p>\n  <p>COVID-19 (coronavirus) is a highly infectious disease that can cause serious illness, hospitalisation and even death.</p>\n  <p>COVID-19 vaccines offer protection from COVID-19. If you do get COVID-19 after vaccination, you should be protected from the serious illness the virus can sometimes cause.</p>\n  <p>You don't have to get a COVID-19 vaccine by law. But we strongly recommend that you get your vaccine when it's offered to you.</p>\n  <p>There's no charge for getting your COVID-19 vaccine. It's free. You cannot get it privately.</p>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AboutCovidVaccineComponent } from './about-covid-vaccine/about-covid-vaccine.component';\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\nimport { AdminUserPlasmaDonationComponent } from './admin-user-plasma-donation/admin-user-plasma-donation.component';\nimport { AdminUserStatusComponent } from './admin-user-status/admin-user-status.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegistrationComponent } from './registration/registration.component';\nimport { UserPlasmaDonationComponent } from './user-plasma-donation/user-plasma-donation.component';\nimport { UserStatusComponent } from './user-status/user-status.component';\n\nconst routes: Routes = [\n  {path:\"adminLogin\",component:AdminLoginComponent},\n  {path:\"\",redirectTo:\"registration\",pathMatch:\"full\"},\n  {path:\"login\",component:LoginComponent},\n  {path:\"home\",component:HomeComponent},\n  {path:\"registration\",component:RegistrationComponent},\n  {path:\"userStatus\",component:UserStatusComponent},\n  {path:\"plasmaRegistraion\",component:UserPlasmaDonationComponent},\n  {path:\"adminUserStatus\",component:AdminUserStatusComponent},\n  {path:\"adminPlasma\",component:AdminUserPlasmaDonationComponent},\n  {path:\"aboutCovid19\",component:AboutCovidVaccineComponent}\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { JwtAuthenticateService } from '../jwt-authenticate.service';\nimport { LoginRequest } from '../LoginRequest';\nimport { LoginResponse } from '../loginrespones';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  request:LoginRequest=new LoginRequest(\"\",\"\");\n  token: any;\n  name!: string;\n  loginResp:LoginResponse=new LoginResponse(\"\",\"\");\n\n  constructor(private jwtAuthenticate:JwtAuthenticateService,private router:Router) { }\n\n  ngOnInit(): void {\n  }\n  public getAccessToken(){\n    let resp =this.jwtAuthenticate.admingenerateToken(this.request);\n    \n    resp.subscribe((data)=> {\n      this.loginResp=data\n   \n      if(this.loginResp.userType== \"A\"){\n      this.name=this.request.username\n         this.jwtAuthenticate.setToken(this.loginResp.token);\n        alert(\"Wrong user Id\")\n     }\n     else if(this.loginResp.userType== \"R\"){\n      this.name=this.request.username\n         this.jwtAuthenticate.setToken(this.loginResp.token);\n        this.router.navigate(['userStatus']);\n     }\n    else{\n      alert(\"Please Enter valid username and password\")\n    }\n    \n    },data=>\n    {\n      alert(\"Please Enter valid username and password\")\n    }\n    );\n\n}\n\n}\n","\n<link href=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\" rel=\"stylesheet\" id=\"bootstrap-css\">\n<script src=\"//maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"></script>\n<script src=\"//cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js\"></script>\n<!------ Include the above in your HEAD tag ---------->\n\n\n\n<div id=\"backGroundImage\">\n<div class=\"wrapper fadeInDown\" >\n  <div id=\"formContent\">\n    <!-- Tabs Titles -->\n\n    \n\n    <!-- Login Form -->\n    <form>\n    <h1>User</h1>\n      <input type=\"text\" [(ngModel)]=\"request.username\" id=\"login\" class=\"fadeIn second\" name=\"login\" placeholder=\"username\">\n      <input type=\"text\" [(ngModel)]=\"request.password\" id=\"password\" class=\"fadeIn third\" name=\"login\" placeholder=\"password\">\n      <input type=\"submit\" class=\"fadeIn fourth\" id =\"submit\" value=\"Log In\" (click)=\"getAccessToken()\">\n    </form>\n\n    \n\n  </div>\n</div>\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { JwtAuthenticateService } from './jwt-authenticate.service';\nimport { PlasmaDonationRequest } from './plasmaDonation';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n // url:string=\"http://Vaccineservice-env.eba-ihd8ukxf.eu-west-1.elasticbeanstalk.com/\";\n url:string=\"http://localhost:5000/\";\n\n  constructor(private http:HttpClient,private jwtService:JwtAuthenticateService) { }\n\n  public getUsersByUsername(username:any){\n    let tokenStr='Bearer '+this.jwtService.getToken();\n    const headers = new HttpHeaders().set('Authorization', tokenStr);\n    return this.http.get(this.url+\"getUsertByName/\"+username,{headers});\n  }\n  public doPlasmaRegistration(user:PlasmaDonationRequest){\n    return this.http.post(this.url+\"addPlasmaDonotor\",user,{  responseType: 'text' as 'json' });\n}\npublic onDeleteUser(id:any){\n  let tokenStr='Bearer '+this.jwtService.getToken();\n  const headers = new HttpHeaders().set('Authorization', tokenStr);\n  return this.http.delete(this.url+\"deleteVaccineUser/\"+id,{headers});\n \n}\npublic onAcceptOrRejectOfUserRequests(request:any){\n  let tokenStr='Bearer '+this.jwtService.getToken();\n  const headers = new HttpHeaders().set('Authorization', tokenStr);\n  return this.http.put(this.url+\"updateUserRequest\",request,{headers});\n \n}\npublic onAcceptDonorPlasma(request:any){\n  let tokenStr='Bearer '+this.jwtService.getToken();\n  const headers = new HttpHeaders().set('Authorization', tokenStr);\n  return this.http.put(this.url+\"updatePlasma\",request,{headers});\n \n}\npublic getAllUserRequest(){\n  let tokenStr='Bearer '+this.jwtService.getToken();\n  const headers = new HttpHeaders().set('Authorization', tokenStr);\n  return this.http.get(this.url+\"getAllVaccineRegistered\",{headers});\n}\npublic getAllVaccineRegistered(){\n  let tokenStr='Bearer '+this.jwtService.getToken();\n  const headers = new HttpHeaders().set('Authorization', tokenStr);\n  return this.http.get(this.url+\"getAllPlasmaRegistered\",{headers});\n}\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}